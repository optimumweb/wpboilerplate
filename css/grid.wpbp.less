// Grid
// grid.wpbp.less
// Grid system based on 960.gs and Foundation by Zurb
// -----------------------------------------------------

@cols:       12;
@colWidth:   100% / @cols;
@gridGutter: 0.9375rem;

* {
  .box-sizing(border-box);
}

body {
  min-width: @screenBase;
}

.container {
  width: auto;
  max-width: @screenBase;
  margin: 0;
  margin-left: auto;
  margin-right: auto;

  .container:not(.collapse) {
    margin-left: -@gridGutter;
    margin-right: -@gridGutter;
  }
}

// GENERATORS
// --------------------------------------------------

// Column Space
// -------------------------

[class*="grid_"] {
  position: relative;
  padding: 0 @gridGutter;
  min-height: 1px;
  float: left;
}

.colSpace (@index, @colWidth, @prefix: ~'') when (@index > 0) {
  (~".@{prefix}grid_@{index}") {
    width: @colWidth * @index;
  }
  .colSpace(@index - 1, @colWidth, @prefix);
}
.colSpace (@index, @colWidth, @prefix: ~'') when (@index = 0) {}

// Prefix Space
// -------------------------

.prefixSpace (@index, @colWidth, @prefix: ~'') when (@index > 0) {
  (~".@{prefix}prefix_@{index}") {
    padding-left: @colWidth * @index;
  }
  .prefixSpace(@index - 1, @colWidth, @prefix);
}

.prefixSpace (@index, @colWidth, @prefix: ~'') when (@index = 0) {}

// Suffix Space
// -------------------------

.suffixSpace (@index, @colWidth, @prefix: ~'') when (@index > 0) {
  (~".@{prefix}suffix_@{index}") {
    padding-right: @colWidth * @index;
  }
  .suffixSpace(@index - 1, @colWidth, @prefix);
}
.suffixSpace (@index, @colWidth, @prefix: ~'') when (@index = 0) {}

// Push Space
// -------------------------

.pushSpace (@index, @colWidth, @prefix: ~'') when (@index > 0) {
  (~".@{prefix}push_@{index}") {
    position: relative;
    left: @colWidth * @index;
  }
  .pushSpace(@index - 1, @colWidth, @prefix);
}
.pushSpace (@index, @colWidth, @prefix: ~'') when (@index = 0) {}

// Pull Space
// -------------------------

.pullSpace (@index, @colWidth, @prefix: ~'') when (@index > 0) {
  (~".@{prefix}pull_@{index}") {
    position: relative;
    left: -@colWidth * @index;
  }
  .pullSpace(@index - 1, @colWidth, @prefix);
}
.pullSpace (@index, @colWidth, @prefix: ~'') when (@index = 0) {}


// FLUID OR COLLAPSE
// --------------------------------------------------

.container {
  &.fluid {
    max-width: none !important;
  }

  &.collapse > [class*="grid_"] {
    padding: 0 !important;
  }
}

// BLOCK GRID
// --------------------------------------------------

.block_grid {
  margin-left: -@gridGutter;
  margin-right: -@gridGutter;

  > * {
    display: block;
    float: left;
    position: relative;
    padding: 0 @gridGutter @gridGutter;
    min-height: 1px;
  }

  &.by_2 > * { width: 100% / 2 !important; }
  &.by_3 > * { width: 100% / 3 !important; }
  &.by_4 > * { width: 100% / 4 !important; }
  &.by_5 > * { width: 100% / 5 !important; }
  &.by_6 > * { width: 100% / 6 !important; }
  &.by_7 > * { width: 100% / 7 !important; }
  &.by_8 > * { width: 100% / 8 !important; }
  &.by_9 > * { width: 100% / 9 !important; }
  &.by_10 > * { width: 100% / 10 !important; }

  &.by_2 > *:nth-child(2n+1),
  &.by_3 > *:nth-child(3n+1),
  &.by_4 > *:nth-child(4n+1),
  &.by_5 > *:nth-child(5n+1),
  &.by_6 > *:nth-child(6n+1),
  &.by_7 > *:nth-child(7n+1),
  &.by_8 > *:nth-child(8n+1),
  &.by_9 > *:nth-child(9n+1),
  &.by_10 > *:nth-child(10n+1) {
    clear: both;
  }
}

ul.block_grid {
  margin-left: -@gridGutter;
  margin-right: -@gridGutter;
  padding: 0;
}

// CLEAR FLOATS
// --------------------------------------------------

.clear {
  clear: both;
  display: block;
  overflow: hidden;
  visibility: hidden;
  width: 0;
  height: 0;
}

.clearfix:before,
.clearfix:after,
.container:before,
.container:after,
.block_grid:before,
.block_grid:after {
  content: '.';
  display: block;
  overflow: hidden;
  visibility: hidden;
  font-size: 0;
  line-height: 0;
  width: 0;
  height: 0;
}

.clearfix:after,
.container:after,
.block_grid:after {
  clear: both;
}

.clearfix,
.container,
.block_grid {
  zoom: 1;
}

// RESPONSIVE GRID
// --------------------------------------------------

body.responsive,
body.mobile-responsive {
  .colSpace(@cols, @colWidth, "small_");
  .prefixSpace(@cols, @colWidth, "small_");
  .suffixSpace(@cols, @colWidth, "small_");
  .pushSpace(@cols, @colWidth, "small_");
  .pullSpace(@cols, @colWidth, "small_");
}

// > @screenSmall
@media only screen and (min-width: @screenSmall) {
  body.responsive,
  body.mobile-responsive {
    .colSpace(@cols, @colWidth, "medium_");
    .prefixSpace(@cols, @colWidth, "medium_");
    .suffixSpace(@cols, @colWidth, "medium_");
    .pushSpace(@cols, @colWidth, "medium_");
    .pullSpace(@cols, @colWidth, "medium_");
  }
}

.colSpace(@cols, @colWidth);
.prefixSpace(@cols, @colWidth);
.suffixSpace(@cols, @colWidth);
.pushSpace(@cols, @colWidth);
.pullSpace(@cols, @colWidth);

// > @screenXlarge
@media only screen and (min-width: @screenXlarge) {
  body.responsive {
    min-width: @screenXlarge;

    .container {
      max-width: @screenXlarge;
    }
  }
}

// @screenLarge -> @screenXlarge
@media only screen and (min-width: @screenLarge) and (max-width: @screenXlarge) {
  body.responsive {
    min-width: @screenLarge;

    .container {
      max-width: @screenLarge;
    }
  }
}

// @screenMedium -> @screenLarge
@media only screen and (min-width: @screenMedium) and (max-width: @screenLarge) {
  body.responsive {
    min-width: @screenMedium;

    .container {
      max-width: @screenMedium;
    }
  }
}

// @screenSmall -> @screenMedium
@media only screen and (min-width: @screenSmall) and (max-width: @screenMedium) {
  body.responsive,
  body.mobile-responsive {
    min-width: @screenSmall;

    .container {
      max-width: @screenSmall;
    }

    [class^="grid_"],
    [class*=" grid_"],
    [class*="small_grid_"] {
      &:not([class*="medium_grid_"]) {
        float: none;
        width: 100%;
      }
    }

    [class^="prefix_"],
    [class*=" prefix_"],
    [class^="small_prefix_"] {
      padding-left: 0;
    }

    [class^="suffix_"],
    [class*=" suffix_"],
    [class^="small_suffix_"] {
      padding-right: 0;
    }

    [class^="push_"],
    [class*=" push_"],
    [class^="small_push_"] {
      left: 0;
    }

    [class^="pull_"],
    [class*=" pull_"],
    [class^="small_pull_"] {
      left: 0;
    }

    .medium_clear {
      .clear();
    }
  }
}

// < @screenSmall
@media only screen and (max-width: @screenSmall) {
  body.responsive,
  body.mobile-responsive {
    -webkit-text-size-adjust: none;
    -ms-text-size-adjust: none;
    width: 100%;
    min-width: 0;
    margin: 0;

    .block_grid > * {
      float: none;
      width: 100% !important;
    }

    [class^="grid_"],
    [class*=" grid_"],
    [class^="medium_grid_"] {
      &:not([class*="small_grid_"]) {
        float: none;
        width: 100%;
      }
    }

    [class^="prefix_"],
    [class*=" prefix_"],
    [class^="medium_prefix_"] {
      padding-left: 0;
    }

    [class^="suffix_"],
    [class*=" suffix_"],
    [class^="medium_suffix_"] {
      padding-right: 0;
    }

    [class^="push_"],
    [class*=" push_"],
    [class^="medium_push_"] {
      left: 0;
    }

    [class^="pull_"],
    [class*=" pull_"],
    [class^="medium_pull_"] {
      left: 0;
    }

    .container {
      width: 100%;

      .container:not(.collapse) {
        margin-left: 0;
        margin-right: 0;
      }
    }

    .small_clear {
      .clear();
    }
  }
}